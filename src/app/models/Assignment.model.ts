import { Metadata } from "@models/Metadata.model";
import { Milestone } from "@models/Milestone.model";
import { Repository } from "@models/Repository.model";
import { Session } from "@models/Session.model";
import { NgbTimeStruct } from "@ng-bootstrap/ng-bootstrap";
import { Type } from "class-transformer";
import { Forge } from "./Forge.model";

/**
 * A practical course, with sessions, questions and
 * milestones (reviews, corrections).
 */
export class Assignment {
  id: number;

  @Type(() => Metadata)
  metadata: Metadata;

  /**
   * The correction milestones
   */
  @Type(() => Milestone)
  corrections: Milestone[];

  /**
   * The practical sessions
   */
  @Type(() => Session)
  sessions: Session[];

  /**
   * The review milestones
   */
  @Type(() => Milestone)
  reviews: Milestone[];

  /**
   * The others milestones. These milestones have no impact on the stats
   * generated by the application, they are just graphical elements
   */
  @Type(() => Milestone)
  others: Milestone[];

  /**
   * The students repositories
   */
  @Type(() => Repository)
  repositories: Repository[];

  @Type(() => Forge)
  forge: Forge;

  constructor() {
    this.metadata = new Metadata();
    this.reviews = [];
    this.corrections = [];
    this.others = [];
    this.sessions = [];
    this.repositories = [];
  }

  get title(): string {
    return this.metadata.title;
  }

  set title(title: string) {
    this.metadata.title = title;
  }

  get startDate(): string {
    return this.metadata.startDate;
  }

  set startDate(startDate: string) {
    this.metadata.startDate = startDate;
  }

  get endDate(): string {
    return this.metadata.endDate;
  }

  set endDate(endDate: string) {
    this.metadata.endDate = endDate;
  }

  get course(): string {
    return this.metadata.course;
  }

  set course(course: string) {
    this.metadata.course = course;
  }

  get program(): string {
    return this.metadata.program;
  }

  set program(program: string) {
    this.metadata.program = program;
  }

  get year(): string {
    return this.metadata.year;
  }

  set year(year: string) {
    this.metadata.year = year;
  }

  get questions(): string[] {
    return this.metadata.questions;
  }

  set questions(questions: string[]) {
    this.metadata.questions = questions;
  }

  get lastModificationDate(): Date {
    return this.metadata.lastModificationDate;
  }

  set lastModificationDate(lastModificationDate: Date) {
    this.metadata.lastModificationDate = lastModificationDate;
  }

  get defaultSessionDuration(): NgbTimeStruct {
    return this.metadata.defaultSessionDuration;
  }

  set defaultSessionDuration(defaultSessionDuration: NgbTimeStruct) {
    this.metadata.defaultSessionDuration = defaultSessionDuration;
  }
}
